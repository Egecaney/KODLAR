#include <msp430.h> 

volatile unsigned int dummy_counter = 0;

int main(void)
{
    WDTCTL = WDTPW | WDTHOLD;   // stop watchdog timer

    P1DIR &= ~BIT3; //configure Port1 pin3 as Input
    P1REN |= BIT3;

    P1DIR |= BIT6;
    P1SEL |= BIT6;

    TA0CCR0 = 1000;
    TA0CCTL1 = OUTMOD_7;
    TA0CCR1 = 10;
    TA0CTL = TASSEL_2 | MC_1 | ID_0 | TAIE;
    TA0CCR1 &= ~CCIFG;

    //_bis_SR_register(LPM0_bits + GIE);
    _enable_interrupts();

    while(1){

    }
}

// Timer A0 interrupt service routine
#pragma vector=TIMER0_A1_VECTOR
__interrupt void TIMER0_A1_PWM(void)
{
    static volatile unsigned int COUNTMODE = 1;
    static volatile int counter = 0;
    TA0CTL &= ~TAIFG;
    if((COUNTMODE == 1) && (TA0CCR1 < 1000)){
        TA0CCR1 = TA0CCR1 + 1;
    }
    else if((COUNTMODE == 1) && (TA0CCR1 > 999)){
        COUNTMODE = 0;
        TA0CCR1 = 1000;
    }
    if((COUNTMODE == 0) && (TA0CCR1 > 10)){
        TA0CCR1 = TA0CCR1 - 1;
    }
    else if((COUNTMODE == 0) && (TA0CCR1 < 11)){
        COUNTMODE = 1;
        TA0CCR1 = 10;
    }
}


