
	NULL STATEMENT:
		1. The "null statement" is an expression statement with the expression missing
		2. C permits a solitary semicolon to be placed wherever a normal program statement can appear
		3. The null statement has the effect of doing nothing, but exists for syntactical reasons
		4. Although the null statement might seem useless, it is often used by C programmers in while, for, and do loops
		5. It is useful when the syntax of the language calls for a statement but no expression evaluation
		
		(QUIZ) The "null statement" is an expression statement with the expression missing -> TRUE
		
	EXAMPLES
		1. 	The purpose of the following statement is to store all the characters read in from the standart input the character array pointed to by text
			until a newline character is encountered
			
			while((*Text++ = getchar()) != '\n')
				;
			
			All the operations are performed inside the looping-conditions part of the while statement
			The Null statement is needed because the compiler takes the statement that follows the looping expression as the body of the loop
			
		2.  The following for statement copies characters from the standart input to the standart output until the end of file (EOF) is encountered
			
			for( ; (c = getchar()) != EOF; putchar(c))
				;
			
			The next statement counts the number of characters that appear in the standart input
			
			for(count = 0; getchar() != EOF; ++count)
				;
				
			The following loop copies the character string pointed to by from to the one pointed to by to
			
			while((*to++ = *from) != '\0')
				;
				
		3. 	When you want to find the index of first occurrence of a certain character in a string
			uint8_t Message[50] = "The empire strikes back";
			
			for(uint8_t Index = 0; Message[Index] < 't'; Index++)
				; // NULL STATEMENT